buildscript {
    repositories {
        maven {
            url 'https://mirrors.huaweicloud.com/repository/maven/'
        }
    }
}

group 'cn.tiakon.gradle'
// projects.group = 'cn.tiakon.gradle'

version '1.0-SNAPSHOT'


allprojects {
    apply plugin: 'java'
    sourceCompatibility = 1.8

    dependencies {
        // https://mvnrepository.com/artifact/ch.qos.logback/logback-classic
        compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.1'
        testCompile group: 'junit', name: 'junit', version: '4.12'
    }
}

subprojects {

    repositories {
        mavenCentral()
    }

   /*
   根项目不依赖
   dependencies {
        // https://mvnrepository.com/artifact/ch.qos.logback/logback-classic
        compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.1'
        testCompile group: 'junit', name: 'junit', version: '4.12'
    }*/

}
repositories {
//    mavenLocal()
    mavenCentral()
    // maven 私服写法
    /*maven {
        url ''
    }*/
}

/*dependencies {
    // https://mvnrepository.com/artifact/org.hibernate/hibernate-core
    compile('org.hibernate:hibernate-core:3.6.3.Final') {
        // 1. 排除依赖
        // exclude group: 'org.slf4j', module: 'slf4j-api'
    }

    // https://mvnrepository.com/artifact/ch.qos.logback/logback-classic
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.1'

    testCompile group: 'junit', name: 'junit', version: '4.12'
//    testRuntime group: 'junit', name: 'junit', version: '4.12'
}*/

// 依赖冲突时，提示报错，不采用默认使用最高版本的设定。
/*configurations.all {
    resolutionStrategy {
        failOnVersionConflict()
        // 2. 强制指定版本
        force 'org.slf4j:slf4j-api:1.7.22'
    }
}*/

/*
def createDir = {
    path ->
        File dir = new File(path)
        if (!dir.exists()) {
            dir.mkdirs()
        }
}

// 自定义task
task makeJavaDir() {
    def pathList = ['src/main/java', 'src/main/resource', 'src/test/java', 'src/test/resource']
    doFirst {
        pathList.forEach(createDir)
    }
}

task makeWebDir() {
    dependsOn 'makeJavaDir'
    def pathList = ['src/main/webapp', 'src/test/webapp']
    doLast {
        pathList.forEach(createDir)
    }
}
*/

// 如何自定义插件

