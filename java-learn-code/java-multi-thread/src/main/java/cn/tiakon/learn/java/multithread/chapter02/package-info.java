package cn.tiakon.learn.java.multithread.chapter02;


/**
 * start() 源码解析：
 * 1. 启动新线程检查线程状态。
 * 2. 加入线程组。
 * 3. 调用本地方法(native) start0()。
 * <p>
 * run()就是一个普通的访问，直接调用不会创建线程。
 * <p>
 * start() 方法含义：
 * 1. 启动新线程（调用start()后，让主函数请求告诉jvm，在jvm空闲时启动新线程）。
 * a. 调用 start() 后线程并不一定立刻运行，线程何时运行，是由线程调度器所决定，当饥饿时就可能不会立刻执行。
 * b. 调用 start() 的顺序并不代表执行顺序。
 * 2. 准备工作。
 * 3. 不能重复启动。
 * <p>
 * 常见面试题问题：
 * <p>
 * 一个线程两次调用start()方法会出现什么情况？为什么？
 * <p>
 * 答：会抛出非法线程状态异常(java.lang.IllegalThreadStateException);
 * 1. 线程执行start方法后会检查线程状态，第一次启动线程状态已修改成非0状态，第二次调用start()不等于0就会抛出异常。
 * 2. 介绍线程状态。
 * <p>
 * 既然 start() 方法回调用run() 方法，为什么我们选择调用start() 方法，而不是直接调用 run() 方法？
 * <p>
 * 1. 因为调用 start() 才会启动一个线程。而调用 run() 则是在主线程中调用了一个方法，并没有真正的启动一个线程。
 *
 * 如何正确停止线程？
 *
 *
 */